//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ChanSort.Loader.Philips {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ChanSort.Loader.Philips.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cancel.
        /// </summary>
        internal static string Cancel {
            get {
                return ResourceManager.GetString("Cancel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The TV may incorrectly show that the import failed, but that can be ignored..
        /// </summary>
        internal static string InfoIgnoreImportError {
            get {
                return ResourceManager.GetString("InfoIgnoreImportError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to INFO: After importing the list back in your TV, unplug it and plug it back in after a few seconds..
        /// </summary>
        internal static string InfoRestartAfterImport {
            get {
                return ResourceManager.GetString("InfoRestartAfterImport", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Ignore the error and edit the list anyway.
        /// </summary>
        internal static string WarningChechsumErrorIgnore {
            get {
                return ResourceManager.GetString("WarningChechsumErrorIgnore", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to WARNING: There were checksum errors in the loaded list!
        ///
        ///There are 2 situations how this can happen:
        ///
        ///- TV&apos;s internal channel list is corrupted (e.g. after a firmware update)
        ///   This can be solved by running a new channel scan or resetting the TV.
        ///   After that export the list again and open it with ChanSort.
        ///   Trying to edit and import the currently broken file can lead to unexpected behavior of the TV.
        ///
        ///- Bad USB-Stick (bad memory cells or incompatible file format)
        ///   Try using a Stick &lt;= 16GB  [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string WarningChecksumErrorMsg {
            get {
                return ResourceManager.GetString("WarningChecksumErrorMsg", resourceCulture);
            }
        }
    }
}
